from flask import Flask, jsonify, request, escape
import os
from flask_mysqldb import MySQL
from worklog import Worklog
import redis
app = Flask(__name__)
app.config['MYSQL_HOST'] = os.environ['DATABASE_HOST']
app.config['MYSQL_USER'] = os.environ['DATABASE_USER']
app.config['MYSQL_PASSWORD'] = os.environ['DATABASE_PASSWORD']
app.config['MYSQL_DB'] = os.environ['DATABASE_NAME']
mysql = MySQL(app)
redis_cli = redis.Redis(host=os.environ['REDIS_LOCATION'], port=os.environ['REDIS_PORT'])
@app.route('/active', methods=['GET'])
def get_active():
    vCountry = request.args.get('country')
    vCity = request.args.get('city');
    wl = Worklog(mysql, app.logger)
    js = wl.find_location(vCountry, vCity)
    if js is None:
        return jsonify('Registro no identificado')
    else:
        return jsonify({'city':js[2], 'country':js[1], 'active':bool(js[3])})
#GET/price--------------------------
@app.route('/price/<idSku>')
def consultar(idSku):
    try:
       wl = Worklog(mysql, app.logger)
       js = wl.find_price(escape(idSku))
       price = float(response[0][0])
       description = str(response[0][0])

       response={
         "price": float(price),
         "idSku": escape(idSku),
         "description": description,
       }
       return jsonify(response)
    except:
       return jsonify({"message":"Datos no asociados"})

  #..................P0ST----------------
@app.route('/quote', methods=['POST'])
def post_quote():
    try:
       country= request.get_json("country",False)
       city= request.get_json("city",False)
       sku= request.get_json("sku",False)
       wl = Worklog(mysql, app.logger)
       wl.save_location(**country)
       return jsonify({'country': country})
    except:
       return jsonify('Error, Verifique URL.')
#....................
@app.route('/active', methods=['POST'])
def post_active():
    try:
       payload = request.get_json()
       wl = Worklog(mysql, app.logger)
       wl.save_location**payload)
       return jsonify({'payload': payload})
    except:
       return jsonify('Error, Verifique URL.')
@app.route('/active', methods=['PUT'])
def put_active():
#   try:
        payload = request.get_json()
        auth = request.headers.get("authorization", None)
        if not auth:
           return jsonify('Token no enviado')
        elif auth != "Bearer 2234hj234h2kkjjh42kjj2b20asd6918":
           return jsonify('Token no autorizado')
        else:
           wl = Worklog(mysql, app.logger)
           wl.state_location(**payload)
          get_report_for_cache(country,city):
    #return code
    total=redis_cli.get(escape(country))
    if total:
        response={
                "active": False,
                "country": country,
                "city": city,
                "cache": "hit"
                }
    else:
        wl=Worklog
        total=wl.compute_total(escape(country))
        redis_cli.set(escape(country,city))
        response={
                "active": False,
                "country": country,
                "city": city,
                "cache": "miss"
                }

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0')
